import telebot
from telebot import types
from telegram import Update
from telegram.ext import ContextTypes
import sqlite3
from datetime import datetime


token='6041501355:AAGimzY0XK9fhSdvPZAnQmKTepvDMd1dPR0'
bot=telebot.TeleBot(token)
JoinedFile = open('–ê—Ä—Ö–∏–≤_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.txt','r')
JoinedUsers = set()
for line in JoinedFile:
    JoinedUsers.add(line.strip())
JoinedFile.close()
SUPPORT_CHAT_ID = -4745976213

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite
def init_db():
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤"""
    conn = sqlite3.connect('support_bot.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tickets (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            username TEXT,
            ticket_id TEXT,
            question TEXT,
            answer TEXT,
            status TEXT DEFAULT 'open',
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    conn.close()
def save_question(user_id, username, ticket_id, question):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect('support_bot.db')
    cursor = conn.cursor()
    cursor.execute('''
        INSERT INTO tickets (user_id, username, ticket_id, question)
        VALUES (?, ?, ?, ?)
    ''', (user_id, username, ticket_id, question))
    conn.commit()
    conn.close()

def save_answer(ticket_id, answer):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–∏–∫–µ—Ç"""
    conn = sqlite3.connect('support_bot.db')
    cursor = conn.cursor()
    cursor.execute('''
        UPDATE tickets SET answer = ?, status = 'closed'
        WHERE ticket_id = ?
    ''', (answer, ticket_id))
    conn.commit()
    conn.close()

def get_user_tickets(user_id):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Ç–∏–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    conn = sqlite3.connect('support_bot.db')
    cursor = conn.cursor()
    cursor.execute('''
        SELECT ticket_id, question, answer, status, created_at
        FROM tickets WHERE user_id = ?
        ORDER BY created_at DESC
    ''', (user_id,))
    tickets = cursor.fetchall()
    conn.close()
    return tickets


@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id,'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ù–∞–ø–∏—à–∏—Ç–µ /menu —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é')
    if not str(message.chat.id) in JoinedUsers:
        JoinedFile = open('–ê—Ä—Ö–∏–≤_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.txt','a')
        JoinedFile.write(str(message.chat.id) + "\n")
        JoinedUsers.add(message.chat.id)
@bot.message_handler(commands=['post'])
def mess(message):
    for user in JoinedUsers:
        bot.send_message(user,message.text[message.text.find(' '):])
@bot.message_handler(commands=['menu'])
def button_message_me(message):
    markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1=types.KeyboardButton("–û —Å–µ–±–µ")
    item2=types.KeyboardButton("–ü—Ä–∞–≤–∏–ª–∞")
    item3=types.KeyboardButton("–ü—Ä–∞–π—Å")
    item4=types.KeyboardButton("–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
    item5 = types.KeyboardButton("üåü–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞üåü")
    item6=types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    item7=types.KeyboardButton("üìã –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è")
    markup.add(item1,item2)
    markup.add(item3,item4)
    markup.add(item6,item7)
    markup.add(item5)
    
    bot.send_message(message.chat.id,'–í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:',reply_markup=markup)


@bot.message_handler(content_types='text')
def message_reply(message):
    if message.text=="–û —Å–µ–±–µ":
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text='–í–ö–æ–Ω—Ç–∞–∫—Ç–µ', url='https://vk.com/zhannavorontsova')
        btn2 = types.InlineKeyboardButton(text='Instagram', url='https://instagram.com/janna_vorontsova?igshid=YmMyMTA2M2Y=')
        btn3 = types.InlineKeyboardButton(text='–Ø—Å–Ω–æ', url='https://yasno.live/therapists/VJRF3NJV-zhanna-vorontsova')
        btn4 = types.InlineKeyboardButton(text='–¢–µ–ª–µ–≥—Ä–∞–º', url='https://t.me/zhanna_vorontsova')
        markup.add(btn1,btn2,btn3,btn4)
        file = open("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è_–æ_—Å–µ–±–µ.txt", 'r', encoding='UTF=8')
        bot.send_message(message.chat.id, file.read(), reply_markup=markup)
        file.close()
    elif message.text=="–ü—Ä–∞–≤–∏–ª–∞":
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
        file = open("–ü—Ä–∞–≤–∏–ª–∞.txt", 'r', encoding='UTF=8')
        bot.send_message(message.chat.id, file.read(),reply_markup=markup)
        file.close()
    elif message.text=="–ü—Ä–∞–π—Å":
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
        file = open("–ü—Ä–∞–π—Å.txt", 'r', encoding='UTF=8')
        bot.send_message(message.chat.id, file.read(),reply_markup=markup)
        file.close()
    elif message.text == "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        file = open("–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.txt",'r',encoding='UTF=8')
        bot.send_message(message.chat.id,file.read(), reply_markup=markup)
        file.close()
    elif message.text == "üåü–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞üåü":
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text='–î–æ–Ω–µ–π—à–Ω–ê–ª–µ—Ä—Ç—Å', url='https://www.donationalerts.com/r/chillarium_room')
        btn2 = types.InlineKeyboardButton(text='–ë—É—Å—Ç–∏',url='https://boosty.to/ondriss')
        markup.add(btn1, btn2)
        file = open("–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è_–ø–æ–¥–¥–µ—Ä–∂–∫–∞.txt",'r',encoding='UTF=8')
        bot.send_message(message.chat.id, file.read(), reply_markup=markup)
        file.close()
@bot.message_handler(func=lambda message: message.text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
def ask_question(message):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã"""
    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –≤–≤–æ–¥–∞
    markup = types.ReplyKeyboardRemove()
    msg = bot.send_message(
        message.chat.id,
        "‚úçÔ∏è –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –≤–æ–ø—Ä–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ:\n\n",
        reply_markup=markup
    )
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–æ–ø—Ä–æ—Å–∞
    bot.register_next_step_handler(msg, process_question)

def process_question(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞–µ—Ç —Ç–∏–∫–µ—Ç"""
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID —Ç–∏–∫–µ—Ç–∞
    ticket_id = f"T-{datetime.now().strftime('%Y%m%d%H%M%S')}"
    username = message.from_user.username or f"id{message.from_user.id}"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    save_question(
        user_id=message.chat.id,
        username=username,
        ticket_id=ticket_id,
        question=message.text
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("‚úÖ –î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å"))
    markup.add(types.KeyboardButton("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å"))
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    bot.send_message(
        message.chat.id,
        f"üìù –í–∞—à –≤–æ–ø—Ä–æ—Å:\n\n{message.text}\n\n"
        f"üî¢ –ù–æ–º–µ—Ä –æ–±—Ä–∞—â–µ–Ω–∏—è: {ticket_id}\n\n"
        "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É?",
        reply_markup=markup
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–æ–ø—Ä–æ—Å–∞
@bot.message_handler(func=lambda message: message.text in ["‚úÖ –î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", "‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å"])
def confirm_question(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–º–µ–Ω—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–æ–ø—Ä–æ—Å–∞"""
    if message.text == "‚úÖ –î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å":
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        tickets = get_user_tickets(message.chat.id)
        if tickets:
            ticket = next((t for t in tickets if t[3] == 'open'), None)
            if ticket:
                ticket_id, question = ticket[0], ticket[1]
                username = message.from_user.username or f"id{message.from_user.id}"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏
                bot.send_message(
                    SUPPORT_CHAT_ID,
                    f"üÜò –ù–û–í–û–ï –û–ë–†–ê–©–ï–ù–ò–ï #{ticket_id}\n\n"
                    f"üë§ –û—Ç: @{username}\n"
                    f"üÜî ID: {message.chat.id}\n\n"
                    f"‚ùì –í–æ–ø—Ä–æ—Å:\n{question}\n\n"
                    f"–î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n"
                    f"/answer {message.chat.id} –≤–∞—à_–æ—Ç–≤–µ—Ç"
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                bot.send_message(
                    message.chat.id,
                    f"‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å #{ticket_id} –ø–µ—Ä–µ–¥–∞–Ω –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n"
                    "–ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
                    reply_markup=types.ReplyKeyboardRemove()
                )
                return
    
        # –ï—Å–ª–∏ —Ç–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
        bot.send_message(
            message.chat.id,
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –µ–≥–æ —Å–Ω–æ–≤–∞.",
            reply_markup=types.ReplyKeyboardRemove()
        )
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –æ—Ç–ø—Ä–∞–≤–∫—É
        bot.send_message(
            message.chat.id,
            "‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.",
            reply_markup=types.ReplyKeyboardRemove()
        )
@bot.message_handler(func=lambda message: message.text == "üìã –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è")
def show_user_tickets(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    tickets = get_user_tickets(message.chat.id)
    
    if not tickets:
        bot.send_message(
            message.chat.id,
            "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
            reply_markup=types.ReplyKeyboardRemove()
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Ç–∏–∫–µ—Ç–æ–≤
    response = "üìã –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π:\n\n"
    for ticket in tickets[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Ç–∏–∫–µ—Ç–æ–≤
        ticket_id, question, answer, status, created_at = ticket
        date = datetime.strptime(created_at, '%Y-%m-%d %H:%M:%S').strftime('%d.%m.%Y %H:%M')
        
        response += (
            f"üî¢ #{ticket_id}\n"
            f"üìÖ {date}\n"
            f"üîÑ –°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–∫—Ä—ã—Ç' if status == 'closed' else 'üü° –í –æ–±—Ä–∞–±–æ—Ç–∫–µ'}\n\n"
        )
    
    bot.send_message(
        message.chat.id,
        response,
        reply_markup=types.ReplyKeyboardRemove()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /answer –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
@bot.message_handler(commands=['answer'])
def handle_answer(message):
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–∑ —á–∞—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    if message.chat.id != SUPPORT_CHAT_ID:
        return
    
    try:
        # –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É: /answer <user_id> <—Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞>
        parts = message.text.split(maxsplit=2)
        if len(parts) < 3:
            raise ValueError
        
        _, user_id, answer_text = parts
        user_id = int(user_id)
        
        # –ò—â–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        conn = sqlite3.connect('support_bot.db')
        cursor = conn.cursor()
        cursor.execute('''
            SELECT ticket_id FROM tickets 
            WHERE user_id = ? AND status = 'open'
            ORDER BY created_at DESC
            LIMIT 1
        ''', (user_id,))
        ticket = cursor.fetchone()
        conn.close()
        
        if ticket:
            ticket_id = ticket[0]
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ç–∏–∫–µ—Ç
            save_answer(ticket_id, answer_text)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.send_message(
                user_id,
                f"üì© –û—Ç–≤–µ—Ç –æ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ –æ–±—Ä–∞—â–µ–Ω–∏—é #{ticket_id}:\n\n"
                f"{answer_text}\n\n"
                f"–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ —Ä–µ—à–µ–Ω, –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–µ—Ä–µ–∑ –º–µ–Ω—é.",
                reply_markup=types.ReplyKeyboardRemove()
            )
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä—É
            bot.reply_to(
                message,
                f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ç–∏–∫–µ—Ç #{ticket_id})."
            )
        else:
            bot.reply_to(
                message,
                "‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π."
            )
    except:
        bot.reply_to(
            message,
            "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
            "/answer <user_id> <—Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞>"
        )
    
if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True)